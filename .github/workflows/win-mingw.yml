name: Windows-mingw
on: 
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.github/workflows/macos.yml'
      - '.github/workflows/win-msvc.yml'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.github/workflows/macos.yml'
      - '.github/workflows/win-msvc.yml'
jobs:
  build:
    name: Build
    runs-on: windows-latest
    strategy:
      matrix:
        qt_arch: [mingw64_qt5-gcc, mingw32_qt5-gcc, mingw64_qt5-static-gcc, mingw32_qt5-static-gcc, mingw64_qt5-clang, mingw32_qt5-clang]
        include:
          - qt_arch: mingw64_qt5-gcc
            mingw_arch: MINGW64 
            mingw_prefix: mingw-w64-x86_64
            toolchains: gcc
            mkspec: win32-g++
            qt_build: qt5
            qmake: qmake.exe
            windeployqt: windeployqt.exe
          - qt_arch: mingw32_qt5-gcc
            mingw_arch: MINGW32
            mingw_prefix: mingw-w64-i686
            toolchains: gcc
            mkspec: win32-g++
            qt_build: qt5
            qmake: qmake.exe
            windeployqt: windeployqt.exe
          - qt_arch: mingw64_qt5-static-gcc
            mingw_arch: MINGW64 
            mingw_prefix: mingw-w64-x86_64
            toolchains: gcc
            mkspec: win32-g++
            qt_build: qt5-static
            qmake: /mingw64/qt5-static/bin/qmake.exe
            windeployqt: ls.exe
          - qt_arch: mingw32_qt5-static-gcc
            mingw_arch: MINGW32
            mingw_prefix: mingw-w64-i686
            toolchains: gcc
            mkspec: win32-g++
            qt_build: qt5-static
            qmake: /mingw32/qt5-static/bin/qmake.exe
            windeployqt: ls.exe
          - qt_arch: mingw64_qt5-clang
            mingw_arch: MINGW64 
            mingw_prefix: mingw-w64-x86_64
            toolchains: clang
            mkspec: win32-clang-g++
            qt_build: qt5
            qmake: qmake.exe
            windeployqt: windeployqt.exe
          - qt_arch: mingw32_qt5-clang
            mingw_arch: MINGW32
            mingw_prefix: mingw-w64-i686
            toolchains: clang
            mkspec: win32-clang-g++
            qt_build: qt5
            qmake: qmake.exe
            windeployqt: windeployqt.exe
    env:
      targetName: CJLV
      
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: ${{ matrix.mingw_arch }}
          install:  ${{ matrix.mingw_prefix }}-${{ matrix.toolchains }} ${{ matrix.mingw_prefix }}-make ${{ matrix.mingw_prefix }}-${{ matrix.qt_build }} ${{ matrix.mingw_prefix }}-openssl ${{ matrix.mingw_prefix }}-zstd

      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: true
      
      - run: mkdir build
          
      - name: qmake
        shell: cmd
        run: |
          cd 3rdparty\scintilla\qt\ScintillaEdit
          python WidgetGen.py
          cd ..\..\..\..
          cd build
          ${{ matrix.qmake }} -r -spec ${{ matrix.mkspec }} CONFIG+=release CONFIG+=qtquickcompiler ..
          cd ..

      - name: mingw32-make
        shell: cmd
        run: |
          cd build
          mingw32-make.exe -j 4
          cd ..
                    
      - name: deploy
        env:
          archiveName: ${{ env.targetName }}-${{ matrix.toolchains }}
        shell: pwsh
        run: |
          New-Item -ItemType Directory ${env:archiveName}
          Copy-Item build\release\${env:targetName}'.exe' ${env:archiveName}\
          Copy-Item build\Release\Everything.exe ${env:archiveName}\
          Copy-Item build\Release\Everything*.dll ${env:archiveName}\
          ${{ matrix.windeployqt }} ${env:archiveName}/${env:targetName}'.exe'
          
      - name: upload artifact
        uses: actions/upload-artifact@v1
        env:
          archiveName: ${{ env.targetName }}-${{ matrix.toolchains }}
        with:
          path: ${{ env.archiveName }}
          name: ${{ env.targetName }}-${{ matrix.mingw_prefix }}-${{ matrix.toolchains }}-${{ matrix.qt_build }}
